{"version":3,"sources":["js/pointer.js","js/mobile-nav.js","js/main.js"],"names":["$areas","document","querySelectorAll","eventsDetails","createPointer","$pointer","$","append","showPointer","el","title","defaultMapSizes","imageMapPosition","$imageMap","getBoundingClientRect","eventCoords","filter","event","coordsX","coordsY","imageMapPositionX","imageMapPositionY","pointerX","pointerY","posY","posX","css","moveMap","Math","floor","lineWidth","distanceBetweenCircleAndLine","forEach","area","push","coords","split","map","val","slice","mapSize","width","$mobileNav","on","addClass","removeClass","$listItems","$introTitle","$dropdown","activeTitle","e","setTimeout","toggleClass","$target","target","parents","hasClass","text","remove","window","innerWidth","data"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..\\src","sourcesContent":["import {$imageMap} from \"./main\"\r\n\r\n// W eventsDetails znajduje się lista obiektów. W każdym obiekcie znajduje się tytuł wydarzenia oraz jego koordynaty, a ta informacja jest pobrana z każdego elementa, który posiada klasę \"area-position\"\r\nconst $areas = document.querySelectorAll(\".area-position\")\r\nconst eventsDetails = []\r\n\r\nexport function createPointer(){\r\n    const $pointer = $(`\r\n    <div class=\"pointer\">\r\n        <div class=\"line\">\r\n            <span class=\"line__top-text\">\r\n            </span>\r\n            <span class=\"line__bottom-text\">\r\n            </span>\r\n        </div>\r\n    </div>`)\r\n    \r\n    $(\"body\").append($pointer)\r\n    return $pointer;\r\n}\r\n\r\n\r\nexport function showPointer(el, title){\r\n\r\n    // Potrzebne ono jest, gdy obraz mapy się zwiększa bądź się zmniejsza to wtedy my bierzemy współczynnik rozmiaru mapy powiększonnej/pomniejszonej i jej standardowego rozmiaru\r\n    const defaultMapSizes = [1556, 787]\r\n    \r\n    // Potrzebne ono jest na obliczenie x y dla punktu\r\n    const imageMapPosition = $imageMap[0].getBoundingClientRect()\r\n\r\n    \r\n    const eventCoords = eventsDetails.filter(event => event.title === title)[0]['coords'] \r\n\r\n    const [coordsX, coordsY] = eventCoords\r\n    const imageMapPositionX = imageMapPosition['x']\r\n    const imageMapPositionY = imageMapPosition['y']\r\n    // Otrzymujemy koordynaty, które uwzględniają jaki jest rozmiar mapy, szerokość/wysokość ekranu\r\n    const pointerX = coordsX + imageMapPositionX\r\n    const pointerY = coordsY + imageMapPositionY\r\n\r\n    // Jeżeli mapa nie jest ucięta, to wtedy pokazujemy punkt na mapie bez kręcenia mapy.\r\n    // W przeciwnym wypadku (gdy mapa jest ucięta, chociaż na 2px, to mapa się obraca do punktu.\r\n    if(imageMapPosition['x'] === 0){\r\n        \r\n        const posY = coordsY*(imageMapPosition['height']/defaultMapSizes[1])\r\n        const posX = coordsX*(imageMapPosition['width']/defaultMapSizes[0]) + imageMapPositionX\r\n        el.css(\"left\", posX)\r\n        el.css(\"top\", posY)\r\n    } else {\r\n        moveMap(coordsX, imageMapPosition, defaultMapSizes)\r\n        el.css(\"left\", \"50%\")\r\n        el.css(\"top\", Math.floor(pointerY*(imageMapPosition['height']/defaultMapSizes[1])) + \"px\")\r\n\r\n    }\r\n    \r\n    \r\n    // Jest przyznaczone dla wyświetlenia linii, ktora jest przyczepiona do punktu z lewej, czy z prawej strony. Działa w ekstra wypadkach, gdy punkty będą znajdować się na końcu mapy\r\n\r\n    const lineWidth = 240;\r\n    const distanceBetweenCircleAndLine = 22.4\r\n    \r\n\r\n    $(\".line\").css(\"cssText\", pointerX - distanceBetweenCircleAndLine - lineWidth + 59 < 0 ? \"left: 1.4rem\" : \"right: 1.4rem\");\r\n    $(\".line__top-text\").css(\"cssText\", pointerX - distanceBetweenCircleAndLine - lineWidth + 59 < 0 ? \"right: 0;\" : \"left: 0;\");\r\n    $(\".line__bottom-text\").css(\"cssText\", pointerX - distanceBetweenCircleAndLine - lineWidth + 59 < 0 ? \"right: 0;\" : \"left: 0;\");\r\n}\r\n\r\n\r\n// Otrzymujemy dane wydarzenia, czyli koordynaty i nazwę tego wydarzenia, otrzymując obiekt i ten obiekt wstawiamy do zmiennej eventsDetails.\r\n$areas.forEach(area => {  \r\n    eventsDetails.push(\r\n        {\r\n            title: area.title,\r\n            coords: area.coords.split(\",\").map(val => +val).slice(0,2)\r\n        }\r\n    )  \r\n})\r\n\r\n// Funkcja do przesuwania mapy\r\nfunction moveMap(coords, imageMapPosition, mapSize){\r\n    $imageMap.css('left', `calc(50% + ${Math.floor(imageMapPosition.width/2-coords*(imageMapPosition.width/mapSize[0]))}px)`)\r\n}","// mobileNav jest przeznaczony dla nawigacji, która jest dostępna, gdy szerokość ekranu jest mniejsza, niż 768px\r\n// Otrzymujemy element z DOM\r\n\r\nconst $mobileNav = $(\".nav-mobile__background\")\r\n\r\n\r\n// Przy kliknięciu otwiera się nawigacja \r\n// Element .nav__btn pokazuje się na ekranie, gdy szerokość jest mniejsza, niż 768px\r\n$(\".nav__btn\").on(\"click\", () => {\r\n    $mobileNav.addClass(\"active\")\r\n})\r\n\r\n// W tym przypadku nawigacja zamyka się\r\n$(\".nav-mobile__btn\").on(\"click\", () => {\r\n    $mobileNav.removeClass(\"active\")\r\n})","import { createPointer, showPointer } from \"./pointer\";\r\nimport './mobile-nav';\r\n\r\n// Otrzymujemy elementy z DOM\r\nconst $listItems = $(\".list__item\")\r\nconst $introTitle = $(\".intro__title\")\r\nconst $dropdown = $(\".dropdown\")\r\nexport const $imageMap = $(\".user-map\")\r\n\r\n\r\n\r\n\r\n\r\n// Jest przydatne dla sprawdzenia, czy użytkownik kliknął \r\nlet activeTitle;\r\n\r\n\r\n\r\n\r\n// Dodajemy eventListener na przycisk dropdown'a, gdy użytkownik klika na container, w którym są nadpis PL i strzałka w dół to nasz dropdown się otwiera.\r\n$(\".dropdown__btn\").on(\"click\", (e) => {\r\n    setTimeout(() => {\r\n        $dropdown.toggleClass(\"active\")\r\n    }, 1)\r\n})\r\n\r\n\r\n// AddEventListener, gdy użytkownik w coś kliknął na stronie \r\n$(document).on('click', (e) => {\r\n\r\n    const $target = $(e.target)\r\n\r\n    \r\n\r\n    // Sprawdza, czy dropdown jest aktywny i gdy nie klikneliśmy w coś wewnątrz dropdown'a, wtedy go zamykamy\r\n    if(!$target.parents(\".dropdown\").hasClass(\"dropdown\") && !$target.hasClass(\"dropdown\")) {\r\n        $dropdown.removeClass(\"active\")\r\n    }\r\n    \r\n    // Jeżeli użytkownik kliknąl na element z listy i jeżeli aktywny element z listy jest identyczny bądź jest ten samy,\r\n    // to nic się nie dzieje\r\n    if(activeTitle === $target.text()){\r\n        return\r\n    }\r\n    \r\n\r\n    // Gdy użytkownik kliknął na element z listy i on jest aktywny i później klika na następny element (nie identycznego do poprzedniego)\r\n    // To usuwamy poprzednią kropkę z informacją o wydarzeniu, na który użytkownik kliknął wcześniej\r\n    const $pointer = $(\".pointer\")\r\n    $pointer.removeClass(\"active\")\r\n    $pointer.remove()\r\n\r\n    \r\n\r\n    // Resetujemy aktywny tytuł\r\n    activeTitle = ''\r\n\r\n    \r\n    // Sprawdzamy, czy użytkownik kliknął na element z listy i czy ten element nie posiada klasy hide\r\n    // Jeżeli szerokość ekranu jest większa 768px to użytkownik może kliknąć na inny element z listy\r\n    // Elementy z listy, którzy posiadają klasę hide są schowane, gdy szerokość ekranu jest mniejsza, niż 768px\r\n    // Czyli wtedy ignorujemy klik na element z listy\r\n    if($target.hasClass(\"list__item\") && (!$target.hasClass(\"hide\") || window.innerWidth >= 768)){\r\n\r\n        // Tworzymy nasz punkt z zawartościami i inicjujemy go w DOM\r\n        const $pointer = createPointer();\r\n        \r\n        // Nadajemy dla activeTitle aktualny tytuł wydarzenia (np. \"Paris Air Show\")\r\n        activeTitle = $target.text()\r\n\r\n        // AddEventListener, gdy użytkownik zmniejsza/zwiększa rozmiar ekran, to punkt, zostaje cały czas na miejscu \r\n        $(window).on(\"resize\", () => {\r\n            activeTitle && showPointer($pointer, activeTitle)\r\n        })\r\n\r\n        \r\n\r\n        // Nadajemy pozycje dla naszego punkta i również w tej funkcji przesuwamy mapę według osi X w odpowiednie miejsce,\r\n        // albo jeżeli obraz mapy nie jest ucięty (czyli zajmuje szerokość 100%) to pokazujemy punkt na mapie bez samego przesuwania\r\n        showPointer($pointer, $target.text())\r\n\r\n        // Nadajemy tekst dla naszego elementów, które znajdują się w div'e \"pointer\"\r\n        $(\".line__top-text\").text($target.text())\r\n        $(\".line__bottom-text\").text($target.data(\"subtitle\"))\r\n\r\n        // W ten moment chowamy tytuł \"World ahead\", nadając mu klasę w DOM \"hide\" \r\n        $introTitle.addClass(\"hide\")\r\n\r\n\r\n        // Zmieniamy kolor wszystkich elementów z listy, nadając im klasę hide.\r\n        $listItems.addClass(\"hide\")\r\n        \r\n        // Usuwamy klasę hide z elementu, na który kliknęliśmy, by pokazać, że jest aktywny\r\n        window.innerWidth > 768 && $target.removeClass(\"hide\")\r\n\r\n        // Wyświetlamy nasz punkt na mapie\r\n        $pointer.addClass(\"active\")\r\n    } \r\n    else {\r\n\r\n        // Gdy użytkownik wcześniej kliknął na element z listy i póżniej kliknął gdzieś indziej, to mapa wraca na standardową pozycję,  \r\n        // a elementy z listy wracają w standardowy stan (w stan przed kliknięciem na element z listy)\r\n        $imageMap.css (\"left\", \"50%\");\r\n        $introTitle.removeClass(\"hide\") \r\n        $listItems.removeClass(\"hide\")\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}